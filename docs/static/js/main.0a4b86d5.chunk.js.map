{"version":3,"sources":["pages/Summary.js","pages/IFrameDetail.js","pages/GeolocationDetail.js","App.js","index.js"],"names":["Summary","console","log","MicroApp","microapp","useRef","id","audience","useEffect","current","initialize","showDetail","detailPage","url","concat","window","location","origin","pathname","title","react_default","a","createElement","className","onClick","Detail","_useState","useState","_useState2","Object","slicedToArray","currentCount","setCurrentCount","_useState3","_useState4","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","navigator","isAvailable","locationData","setLocationData","JSON","stringify","geolocation","getCurrentPosition","position","err","App","react_router_dom","basename","react_router","path","exact","component","IFrameDetail","GeolocationDetail","ReactDOM","render","src_App","document","getElementById"],"mappings":"0PA8CeA,EA3CC,WACdC,QAAQC,IAAI,mBAAoBC,KAEhC,IAAMC,EAAWC,iBACf,IAAIF,IAAS,CACXG,GAAI,gBACJC,SAAU,mBAIdC,oBAAU,WACRP,QAAQC,IAAI,iBACX,IAEHM,oBAAU,WACRP,QAAQC,IAAI,gBAAiBE,EAASK,SACtCL,EAASK,QAAQC,cAChB,IAEH,IAAMC,EAAa,SAAAC,GAEjBR,EAASK,QAAQE,WAAW,CAC1BE,IAAG,GAAAC,OAAKC,OAAOC,SAASC,QAArBH,OAA8BC,OAAOC,SAASE,SAA9C,MAAAJ,OAA2DF,GAC9DO,MAAO,mBAIX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,YAAYC,QAAS,kBAAMb,EAAW,YAAxD,gBAGAS,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUC,QAAS,kBAAMb,EAAW,iBAAtD,yBCIOc,SAtCA,WACb,IAAMrB,EAAWC,iBACf,IAAIF,IAAS,CACXG,GAAI,gBACJC,SAAU,mBAJKmB,EAQqBC,mBAAS,GAR9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAQZK,EARYH,EAAA,GAQEI,EARFJ,EAAA,GAAAK,EASeN,mBAAS,IATxBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GASZE,EATYD,EAAA,GASDE,EATCF,EAAA,GAUbG,EAAiBhC,mBAgBvB,OAdAG,oBAAU,WACRJ,EAASK,QAAQC,aACjB2B,EAAe5B,QAAU6B,YAAY,WACnCN,EAAgB,SAAAO,GAAI,OAAIA,EAAO,KAC9B,MACF,IAEH/B,oBAAU,WACJuB,GAAgB,IAClBK,EAAa,qCACbI,cAAcH,EAAe5B,WAE9B,CAACsB,IAGFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAAA,4GACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,8BAAsBS,EAAtB,KACAX,EAAAC,EAAAC,cAAA,UAAQmB,MAAO,CAAEC,MAAO,OAAQC,YAAa,GAAKxB,MAAM,iBAAiByB,IAAKT,QCmBvEV,EAnDA,WACb,IAAMrB,EAAWC,iBACf,IAAIF,IAAS,CACXG,GAAI,gBACJC,SAAU,mBAJKmB,EAQGC,mBAAS,gBAAiBkB,WAAzCC,EARYjB,OAAAC,EAAA,EAAAD,CAAAH,EAAA,MAAAO,EASqBN,qBATrBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GASZc,EATYb,EAAA,GASEc,EATFd,EAAA,GAWnB1B,oBAAU,WACRJ,EAASK,QAAQC,cAChB,IAmBH,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAA,6HAGAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,sCAA8B2B,KAAKC,UAAUJ,IAC7C1B,EAAAC,EAAAC,cAAA,WAAMyB,IAER3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUC,QA5BV,WACtB,GAAIsB,EAAa,CACf7C,QAAQC,IAAI,yBACZ,IACE2C,UAAUM,YAAYC,mBAAmB,SAAAC,GACvCpD,QAAQC,IAAI,qBAAsBmD,GAClCL,EAAgBC,KAAKC,UAAUG,EAAU,KAAM,MAEjD,MAAOC,GACPrD,QAAQC,IAAIoD,GACZN,EAAgB,sCAGlBA,EAAgB,kCAed,mBCxBOO,EAhBH,WAOV,OANAtD,QAAQC,IAAI,eAEZM,oBAAU,WACRP,QAAQC,IAAI,qBACX,IAGDkB,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAQC,SAAU1C,OAAOC,SAASE,UAChCE,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7D,IACjCoB,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,KAAK,UAAUE,UAAWC,IACjC1C,EAAAC,EAAAC,cAACoC,EAAA,EAAD,CAAOC,KAAK,eAAeE,UAAWE,MCb5CC,IAASC,OAAO7C,EAAAC,EAAAC,cAAC4C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.0a4b86d5.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\n\nconst Summary = () => {\n  console.log('Loading summary ', MicroApp)\n\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    console.log('Using effect')\n  }, [])\n\n  useEffect(() => {\n    console.log('Initializing ', microapp.current)\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp.</p>\n      <div className=\"action-block vertical\">\n        <button className=\"secondary\" onClick={() => showDetail('iframe')}>\n          Inner iFrame\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('geolocation')}>\n          Geolocation\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [currentCount, setCurrentCount] = useState(5)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount(prev => prev - 1)\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"exampleBlock\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [isAvailable] = useState('geolocation' in navigator)\n  const [locationData, setLocationData] = useState()\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const getLocationData = () => {\n    if (isAvailable) {\n      console.log('Getting location data')\n      try {\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log('Got location data ', position)\n          setLocationData(JSON.stringify(position, null, 2))\n        })\n      } catch (err) {\n        console.log(err)\n        setLocationData('Error fetching location data')\n      }\n    } else {\n      setLocationData('Geolocation is not available')\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Geolocation Detail</h1>\n      <p>\n        This detail attempts to get location data. You must include the featurePolicy in the catalog entry for this app.\n      </p>\n      <div className=\"example-block\">\n        <p>GeoLocation is available: {JSON.stringify(isAvailable)}</p>\n        <pre>{locationData}</pre>\n      </div>\n      <div className=\"action-block\">\n        <button className=\"primary\" onClick={getLocationData}>\n          Get Location\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\nimport GeolocationDetail from './pages/GeolocationDetail'\n\nconst App = () => {\n  console.log('Loading app')\n\n  useEffect(() => {\n    console.log('useEffect in app')\n  }, [])\n\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      <Route path=\"/geolocation\" component={GeolocationDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}