{"version":3,"sources":["components/Tests.js","pages/Summary.js","pages/IFrameDetail.js","pages/TestDetail.js","pages/FeaturePolicyDetail.js","pages/ExceptionDetail.js","App.js","index.js"],"names":["testTypes","name","inDetail","microapp","panel","useState","map","testType","inSummary","loading","result","tests","setTests","testActions","useRef","useEffect","current","Token","testToken","Title","testTitle","Show","testShow","Hide","testHide","updateTest","update","prevTests","test","setTimeout","a","getToken","token","decodedToken","decode","aud","window","location","origin","pathname","console","warn","updateTitle","Math","floor","random","showDetail","url","hideDetail","filter","className","key","aria-label","role","onClick","testName","shouldBeHeightZero","URLSearchParams","search","get","Summary","MicroApp","initialize","detailPage","title","version","Tests","htmlFor","type","placeholder","Detail","currentCount","setCurrentCount","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","href","target","rel","id","audience","navigator","isGeoAvailable","mediaDevices","isMicAvailable","locationData","setLocationData","isMicOn","setIsMicOn","JSON","stringify","tabIndex","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","ExceptionDetail","status","setStatus","Error","App","basename","path","exact","component","TestDetail","IFrameDetail","FeaturePolicyDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.688c113f.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { decode } from 'jsonwebtoken'\n\nconst testTypes = [{ name: 'Token' }, { name: 'Title' }, { name: 'Show', inDetail: false }, { name: 'Hide' }]\n\nexport default ({ microapp, panel = 'summary' }) => {\n  const [tests, setTests] = useState(\n    testTypes.map((testType) => ({ inSummary: true, inDetail: true, loading: false, result: false, ...testType }))\n  )\n  const testActions = useRef({})\n\n  useEffect(() => {\n    testActions.current.Token = testToken\n    testActions.current.Title = testTitle\n    testActions.current.Show = testShow\n    testActions.current.Hide = testHide\n  })\n\n  const runTest = (testName) => () => {\n    testActions.current[testName]()\n  }\n\n  const updateTest = (name, update) => {\n    setTests((prevTests) => {\n      return prevTests.map((test) => {\n        if (test.name === name) {\n          return { ...test, ...update }\n        } else {\n          return test\n        }\n      })\n    })\n  }\n\n  const testToken = () => {\n    if (!microapp) return\n\n    updateTest('Token', { loading: true, result: false })\n    // Arbitrarily add a \"loading time\" other wise you are kind of \"did it work?\"\n    setTimeout(async () => {\n      const token = await microapp.getToken()\n      // This would be done on a server side, notice how I'm not verifying the token\n      const decodedToken = decode(token)\n      if (decodedToken.aud === window.location.origin + window.location.pathname) {\n        updateTest('Token', { loading: false, result: true })\n      } else {\n        updateTest('Token', { loading: false, result: false })\n        console.warn(`Invalid token: ${decodedToken.aud} !== ${window.location.origin + window.location.pathname}`)\n      }\n    }, 500)\n  }\n\n  const testTitle = () => {\n    updateTest('Title', { result: false })\n    microapp.updateTitle(`Title Change: ${Math.floor(Math.random() * 500)}`)\n    updateTest('Title', { result: true })\n  }\n\n  const testShow = () => {\n    updateTest('Show', { result: false })\n    microapp.showDetail({ url: `${window.location.origin}${window.location.pathname}#/tests` })\n    updateTest('Show', { result: true })\n  }\n\n  const testHide = () => {\n    updateTest('Hide', { result: false })\n    microapp.hideDetail()\n    updateTest('Hide', { result: true })\n  }\n\n  return (\n    <>\n      <strong>Tests:</strong>\n      {tests\n        .filter((test) => (panel === 'summary' && test.inSummary) || (panel === 'detail' && test.inDetail))\n        .map((test) => (\n          <div className=\"checklist\" key={test.name}>\n            {test.loading ? (\n              <span aria-label=\"loading\" role=\"img\" className=\"pass\">\n                🤔\n              </span>\n            ) : (\n              <>\n                {test.result ? (\n                  <span aria-label=\"pass\" role=\"img\" className=\"pass\">\n                    ✅\n                  </span>\n                ) : (\n                  <span aria-label=\"fail\" role=\"img\" className=\"pass\">\n                    ❌\n                  </span>\n                )}\n              </>\n            )}\n            <div className=\"item\">{test.name}</div>\n            <div className=\"item\">\n              <button className=\"action-small\" onClick={runTest(test.name)}>\n                Run\n              </button>\n            </div>\n          </div>\n        ))}\n    </>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport Tests from '../components/Tests'\nimport MicroApp from '@workgrid/micro-app'\nimport './summary.css'\nimport { version } from '../../package.json'\n\nconst searchParams = new URLSearchParams(window.location.search)\nconst shouldBeHeightZero = searchParams.get('heightZero')\n\nconst Summary = () => {\n  const microapp = useRef(new MicroApp())\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = (detailPage) => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Trial Microapp Detail',\n    })\n  }\n\n  if (shouldBeHeightZero) {\n    return null\n  }\n\n  return (\n    <div>\n      <h1>Edge Trials 🔪</h1>\n      <p>This is the Edge Trials. v{version}</p>\n      <section className=\"section\">\n        <Tests microapp={microapp.current} panel=\"summary\" />\n        <label htmlFor=\"test-input\">Test Input</label>\n        <input type=\"text\" placeholder=\"Input Test\" name=\"test-input\" />\n      </section>\n      <div className=\"action-block vertical\">\n        <button className=\"primary\" onClick={() => showDetail('iframe')}>\n          iFrame Tests\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('exception')}>\n          Exception Tests\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(new MicroApp())\n\n  const [currentCount, setCurrentCount] = useState(3)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount((prev) => {\n        return prev - 1\n      })\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app/')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"example-block\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\nimport Tests from '../components/Tests'\n\nconst Detail = () => {\n  const microapp = useRef(new MicroApp({}))\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <h1>Tests Detail</h1>\n      <div className=\"example-block\">\n        <Tests microapp={microapp.current} panel=\"detail\" />\n      </div>\n\n      <div className=\"example-block\">\n        <a href=\"./test-internal.html\">Internal Link</a>\n        <a href=\"https://www.bing.com?q=external\" target=\"_blank\" rel=\"noopener noreferrer\">\n          External Link\n        </a>\n        <a href=\"tel:1-562-867-5309\">Tel Link</a>\n        <a href=\"mailto:support@workgrid.com\">Mailto Link</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [isGeoAvailable] = useState('geolocation' in navigator)\n  const [isMicAvailable] = useState(!!navigator.mediaDevices)\n  const [locationData, setLocationData] = useState('Get location data >>')\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const getLocationData = () => {\n    if (isGeoAvailable) {\n      setLocationData('Getting location data')\n      try {\n        navigator.geolocation.getCurrentPosition(position => {\n          setLocationData(`lat: ${position.coords.latitude}, lon: ${position.coords.longitude}`)\n        })\n      } catch (err) {\n        setLocationData('Error fetching location data')\n      }\n    } else {\n      setLocationData('Geolocation is not available')\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Feature Policy Detail</h1>\n      <p>\n        This detail attempts to get location data. You must include the featurePolicy in the catalog entry for this app.\n      </p>\n      <div className=\"example-block\">\n        <p>GeoLocation is available: {JSON.stringify(isGeoAvailable)}</p>\n        <div className=\"feature-block\">\n          <pre>{locationData}</pre>\n          <div tabIndex=\"0\" className=\"feature-icon\" onClick={getLocationData}>\n            <span role=\"img\" aria-label=\"position\">\n              🧭\n            </span>\n          </div>\n        </div>\n        <p>Media is available: {JSON.stringify(isMicAvailable)}</p>\n        <div className=\"feature-block\">\n          {isMicAvailable && (\n            <div tabIndex=\"1\" className=\"feature-icon\" onClick={() => setIsMicOn(prev => !prev)}>\n              <span role=\"img\" aria-label=\"mic\" className={isMicOn ? 'on' : 'off'}>\n                🎙️\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst ExceptionDetail = () => {\n  const microapp = useRef(new MicroApp())\n  const [status, setStatus] = useState('📦')\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const throwException = () => {\n    setStatus('🤮')\n    throw new Error('🤮')\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Exception Detail</h1>\n      <p>This tests throwing an unhandled exception in a MicroApp</p>\n      <div className=\"example-block\">\n        <p>Status: {status}</p>\n      </div>\n      <div className=\"action-block\">\n        <button className=\"primary\" type=\"button\" onClick={throwException}>\n          Throw Exception\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default ExceptionDetail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\nimport TestDetail from './pages/TestDetail'\nimport FeaturePolicyDetail from './pages/FeaturePolicyDetail'\nimport ExceptionDetail from './pages/ExceptionDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/tests\" component={TestDetail} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} />\n      <Route path=\"/exception\" component={ExceptionDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","import 'core-js/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}