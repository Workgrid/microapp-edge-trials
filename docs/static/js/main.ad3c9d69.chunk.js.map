{"version":3,"sources":["components/Tests.js","pages/Summary.js","pages/IFrameDetail.js","pages/TestDetail.js","App.js","index.js"],"names":["microapp","useState","name","result","tests","setTests","useEffect","testToken","updateTest","update","prevTests","map","test","setTimeout","a","getToken","token","process","decodedToken","decode","aud","console","warn","className","key","aria-label","role","onClick","Summary","useRef","MicroApp","id","audience","log","current","initialize","showDetail","detailPage","url","window","location","origin","pathname","title","type","placeholder","Tests","Detail","currentCount","setCurrentCount","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","App","basename","path","exact","component","TestDetail","IFrameDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad3c9d69.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { decode } from 'jsonwebtoken'\n\nexport default ({ microapp }) => {\n  const [tests, setTests] = useState([{ name: 'Token', result: false }])\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => testToken(), [microapp])\n\n  const updateTest = (name, update) => {\n    setTests(prevTests => {\n      return prevTests.map(test => {\n        if (test.name === name) {\n          return { ...test, ...update }\n        } else {\n          return test\n        }\n      })\n    })\n  }\n\n  const testToken = () => {\n    if (!microapp) return\n\n    updateTest('Token', { result: false })\n    // Arbitrarily add a \"loading time\" other wise you are kind of \"did it work?\"\n    setTimeout(async () => {\n      const token = await microapp.getToken()\n      // This would be done on a server side, notice how I'm not verifying the token\n      const decodedToken = decode(token)\n      // TODO alter this verification when this app is upgraded to the more secure token\n      if (decodedToken.aud === process.env.REACT_APP_AUD) {\n        updateTest('Token', { result: true })\n      } else {\n        console.warn(`Invalid token: ${decodedToken.aud} !== ${process.env.REACT_APP_AUD}`)\n      }\n    }, 1000)\n  }\n\n  return (\n    <>\n      <strong>Tests:</strong>\n      {tests.map(test => (\n        <div className=\"checklist\" key={test.name}>\n          {test.result ? (\n            <span aria-label=\"pass\" role=\"img\" className=\"pass\">\n              ✅\n            </span>\n          ) : (\n            <span aria-label=\"fail\" role=\"img\" className=\"pass\">\n              ❌\n            </span>\n          )}\n          <div className=\"item\">{test.name}</div>\n          <div className=\"item\">\n            <button className=\"action-small\" onClick={testToken}>\n              Retry\n            </button>\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport Tests from '../components/Tests'\nimport MicroApp from '@workgrid/micro-app'\nimport './summary.css'\n\nconst Summary = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    console.log('Initialize')\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    console.log('Showing detail')\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp.</p>\n      <section className=\"section\">\n        <input type=\"text\" placeholder=\"Input Test\"></input>\n        <Tests microapp={microapp.current} />\n      </section>\n      <div className=\"action-block vertical\">\n        <button className=\"secondary\" onClick={() => showDetail('iframe')}>\n          Inner iFrame\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('tests')}>\n          Detail Tests\n        </button>\n        {/* <button className=\"primary\" onClick={() => showDetail('featurepolicy')}>\n          Feature Policy\n        </button> */}\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [currentCount, setCurrentCount] = useState(5)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    console.log('Initializing Detail')\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount(prev => {\n        console.log(!!(prev % 2) ? 'Tick' : 'Tock')\n        return prev - 1\n      })\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app/')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"example-block\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\nimport Tests from '../components/Tests'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    console.log('Initializing Detail')\n    microapp.current.initialize()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <h1>Tests Detail</h1>\n      <div className=\"example-block\">\n        <Tests microapp={microapp.current} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\n// import FeaturePolicyDetail from './pages/FeaturePolicyDetail'\nimport TestDetail from './pages/TestDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/tests\" component={TestDetail} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      {/* <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} /> */}\n    </Router>\n  )\n}\n\nexport default App\n","import 'core-js/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}