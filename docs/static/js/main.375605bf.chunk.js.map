{"version":3,"sources":["components/Tests.js","components/Debugger.js","pages/Summary.js","pages/IFrameDetail.js","pages/TestDetail.js","App.js","index.js"],"names":["testTypes","microapp","useState","map","testType","name","loading","result","tests","setTests","testActions","useRef","useEffect","testToken","current","Token","Title","testTitle","Show","testShow","Hide","testHide","updateTest","update","prevTests","test","setTimeout","a","getToken","token","process","decodedToken","decode","aud","console","warn","updateTitle","Math","floor","random","showDetail","url","window","location","origin","pathname","hideDetail","className","key","aria-label","role","onClick","testName","reload","Summary","MicroApp","id","audience","log","initialize","detailPage","title","type","placeholder","Tests","Debugger","Detail","currentCount","setCurrentCount","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","App","basename","path","exact","component","TestDetail","IFrameDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.375605bf.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\nimport { decode } from 'jsonwebtoken'\n\nconst testTypes = ['Token', 'Title', 'Show', 'Hide']\n\nexport default ({ microapp }) => {\n  const [tests, setTests] = useState(testTypes.map(testType => ({ name: testType, loading: false, result: false })))\n  const testActions = useRef({})\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => testToken(), [microapp])\n\n  useEffect(() => {\n    testActions.current.Token = testToken\n    testActions.current.Title = testTitle\n    testActions.current.Show = testShow\n    testActions.current.Hide = testHide\n  })\n\n  const runTest = testName => () => {\n    testActions.current[testName]()\n  }\n\n  const updateTest = (name, update) => {\n    setTests(prevTests => {\n      return prevTests.map(test => {\n        if (test.name === name) {\n          return { ...test, ...update }\n        } else {\n          return test\n        }\n      })\n    })\n  }\n\n  const testToken = () => {\n    if (!microapp) return\n\n    updateTest('Token', { loading: true, result: false })\n    // Arbitrarily add a \"loading time\" other wise you are kind of \"did it work?\"\n    setTimeout(async () => {\n      const token = await microapp.getToken()\n      // This would be done on a server side, notice how I'm not verifying the token\n      const decodedToken = decode(token)\n      // TODO alter this verification when this app is upgraded to the more secure token\n      if (decodedToken.aud === process.env.REACT_APP_AUD) {\n        updateTest('Token', { loading: false, result: true })\n      } else {\n        updateTest('Token', { loading: false, result: false })\n        console.warn(`Invalid token: ${decodedToken.aud} !== ${process.env.REACT_APP_AUD}`)\n      }\n    }, 500)\n  }\n\n  const testTitle = () => {\n    updateTest('Title', { result: false })\n    microapp.updateTitle(`Title Change: ${Math.floor(Math.random() * 500)}`)\n    updateTest('Title', { result: true })\n  }\n\n  const testShow = () => {\n    updateTest('Show', { result: false })\n    microapp.showDetail({ url: `${window.location.origin}${window.location.pathname}#/tests` })\n    updateTest('Show', { result: true })\n  }\n\n  const testHide = () => {\n    updateTest('Hide', { result: false })\n    microapp.hideDetail()\n    updateTest('Hide', { result: true })\n  }\n\n  return (\n    <>\n      <strong>Tests:</strong>\n      {tests.map(test => (\n        <div className=\"checklist\" key={test.name}>\n          {test.loading ? (\n            <span aria-label=\"loading\" role=\"img\" className=\"pass\">\n              ü§î\n            </span>\n          ) : (\n            <>\n              {test.result ? (\n                <span aria-label=\"pass\" role=\"img\" className=\"pass\">\n                  ‚úÖ\n                </span>\n              ) : (\n                <span aria-label=\"fail\" role=\"img\" className=\"pass\">\n                  ‚ùå\n                </span>\n              )}\n            </>\n          )}\n          <div className=\"item\">{test.name}</div>\n          <div className=\"item\">\n            <button className=\"action-small\" onClick={runTest(test.name)}>\n              Run\n            </button>\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <>\n      <button className=\"secondary\" onClick={() => window.location.reload(true)}>\n        Refresh\n      </button>\n    </>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport Tests from '../components/Tests'\nimport MicroApp from '@workgrid/micro-app'\nimport Debugger from '../components/Debugger'\nimport './summary.css'\n\nconst Summary = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp-local',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    console.log('Initialize')\n    microapp.current.initialize()\n    console.log('Post initialize')\n  }, [])\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    console.log('Showing detail')\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp.</p>\n      <section className=\"section\">\n        <input type=\"text\" placeholder=\"Input Test\"></input>\n        <Tests microapp={microapp.current} />\n      </section>\n      <div className=\"action-block vertical\">\n        <Debugger />\n        <button className=\"secondary\" onClick={() => showDetail('iframe')}>\n          Inner iFrame\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('tests')}>\n          Detail Tests\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [currentCount, setCurrentCount] = useState(5)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    console.log('Initializing Detail')\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount(prev => {\n        console.log(!!(prev % 2) ? 'Tick' : 'Tock')\n        return prev - 1\n      })\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app/')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"example-block\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\nimport Tests from '../components/Tests'\nimport Debugger from '../components/Debugger'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    console.log('Initializing Detail')\n    microapp.current.initialize()\n  }, [])\n\n  return (\n    <div className=\"container\">\n      <h1>Tests Detail</h1>\n      <div className=\"example-block\">\n        <Tests microapp={microapp.current} />\n      </div>\n      <div className=\"action-block\">\n        <Debugger />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\n// import FeaturePolicyDetail from './pages/FeaturePolicyDetail'\nimport TestDetail from './pages/TestDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/tests\" component={TestDetail} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      {/* <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} /> */}\n    </Router>\n  )\n}\n\nexport default App\n","import 'core-js/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}