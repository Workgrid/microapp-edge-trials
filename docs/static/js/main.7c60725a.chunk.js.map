{"version":3,"sources":["pages/Summary.js","pages/IFrameDetail.js","pages/FeaturePolicyDetail.js","App.js","index.js"],"names":["Summary","useState","name","result","tests","setTests","microapp","useRef","MicroApp","id","audience","useEffect","console","log","current","initialize","testToken","showDetail","detailPage","url","window","location","origin","pathname","title","updateTest","update","prevTests","map","test","setTimeout","a","getToken","token","process","decodedToken","decode","aud","warn","className","type","placeholder","aria-label","role","onClick","Detail","currentCount","setCurrentCount","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","navigator","isGeoAvailable","mediaDevices","isMicAvailable","locationData","setLocationData","isMicOn","setIsMicOn","JSON","stringify","tabIndex","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","record","strokeColor","backgroundColor","App","basename","path","exact","component","IFrameDetail","FeaturePolicyDetail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7c60725a.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport { decode } from 'jsonwebtoken'\nimport './summary.css'\n\nconst Summary = () => {\n  const [tests, setTests] = useState([{ name: 'Token', result: false }])\n\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    console.log('Initialized')\n    microapp.current.initialize()\n    testToken()\n    console.log('Done initializing')\n  }, [])\n  /* eslint-enable */\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    console.log('Showing detail')\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  const updateTest = (name, update) => {\n    setTests(prevTests => {\n      return prevTests.map(test => {\n        if (test.name === name) {\n          return { ...test, ...update }\n        } else {\n          return test\n        }\n      })\n    })\n  }\n\n  const testToken = () => {\n    updateTest('Token', { result: false })\n    // Arbitrarily add a \"loading time\" other wise you are kind of \"did it work?\"\n    setTimeout(async () => {\n      const token = await microapp.current.getToken()\n      // This would be done on a server side, notice how I'm not verifying the token\n      const decodedToken = decode(token)\n      if (decodedToken.aud === process.env.REACT_APP_AUD) {\n        updateTest('Token', { result: true })\n      } else {\n        console.warn(`Invalid token: ${decodedToken.aud} !== ${process.env.REACT_APP_AUD}`)\n      }\n    }, 1000)\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp.</p>\n      <section className=\"section\">\n        <input type=\"text\" placeholder=\"Input Test\"></input>\n        <strong>Tests:</strong>\n        {tests.map(test => (\n          <div className=\"checklist\">\n            {test.result ? (\n              <span aria-label=\"pass\" role=\"img\" className=\"pass\">\n                ✅\n              </span>\n            ) : (\n              <span aria-label=\"fail\" role=\"img\" className=\"pass\">\n                ❌\n              </span>\n            )}\n            <div className=\"item\">{test.name}</div>\n            <div className=\"item\">\n              <button className=\"action-small\" onClick={testToken}>\n                Retry\n              </button>\n            </div>\n          </div>\n        ))}\n      </section>\n      <div className=\"action-block vertical\">\n        <button className=\"secondary\" onClick={() => showDetail('iframe')}>\n          Inner iFrame\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('featurepolicy')}>\n          Feature Policy\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [currentCount, setCurrentCount] = useState(5)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    console.log('Initializing Detail')\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount(prev => {\n        console.log(!!(prev % 2) ? 'Tick' : 'Tock')\n        return prev - 1\n      })\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app/')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"exampleBlock\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport { ReactMic } from 'react-mic'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [isGeoAvailable] = useState('geolocation' in navigator)\n  const [isMicAvailable] = useState(!!navigator.mediaDevices)\n  const [locationData, setLocationData] = useState('Get location data >>')\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const getLocationData = () => {\n    if (isGeoAvailable) {\n      setLocationData('Getting location data')\n      try {\n        navigator.geolocation.getCurrentPosition(position => {\n          setLocationData(`lat: ${position.coords.latitude}, lon: ${position.coords.longitude}`)\n        })\n      } catch (err) {\n        setLocationData('Error fetching location data')\n      }\n    } else {\n      setLocationData('Geolocation is not available')\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Feature Policy Detail</h1>\n      <p>\n        This detail attempts to get location data. You must include the featurePolicy in the catalog entry for this app.\n      </p>\n      <div className=\"example-block\">\n        <p>GeoLocation is available: {JSON.stringify(isGeoAvailable)}</p>\n        <div className=\"feature-block\">\n          <pre>{locationData}</pre>\n          <div tabIndex=\"0\" className=\"feature-icon\" onClick={getLocationData}>\n            <span role=\"img\" aria-label=\"position\">\n              🧭\n            </span>\n          </div>\n        </div>\n        <p>Media is available: {JSON.stringify(isMicAvailable)}</p>\n        <div className=\"feature-block\">\n          <ReactMic className=\"mic-visual\" record={isMicOn} strokeColor=\"black\" backgroundColor=\"#f9f9f9\" />\n          <div tabIndex=\"1\" className=\"feature-icon\" onClick={() => setIsMicOn(prev => !prev)}>\n            <span role=\"img\" aria-label=\"mic\">\n              🎙️\n            </span>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\nimport FeaturePolicyDetail from './pages/FeaturePolicyDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","import 'core-js/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}