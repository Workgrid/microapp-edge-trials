{"version":3,"sources":["pages/Summary.js","pages/IFrameDetail.js","pages/FeaturePolicyDetail.js","App.js","index.js"],"names":["Summary","microapp","useRef","MicroApp","id","audience","useEffect","current","initialize","showDetail","detailPage","url","window","location","origin","pathname","title","className","onClick","Detail","useState","currentCount","setCurrentCount","iframeUrl","setIframeUrl","countdownTimer","setInterval","prev","clearInterval","style","width","borderWidth","src","navigator","isGeoAvailable","mediaDevices","isMicAvailable","locationData","setLocationData","isMicOn","setIsMicOn","getMicrophone","a","getUserMedia","audio","video","stream","console","log","error","JSON","stringify","geolocation","getCurrentPosition","position","err","App","basename","path","exact","component","IFrameDetail","FeaturePolicyDetail","ReactDOM","render","document","getElementById"],"mappings":"4TAuCeA,EApCC,WACd,IAAMC,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,gBACJC,SAAU,mBAIdC,oBAAU,WACRL,EAASM,QAAQC,cAChB,IAEH,IAAMC,EAAa,SAAAC,GAEjBT,EAASM,QAAQE,WAAW,CAC1BE,IAAI,GAAD,OAAKC,OAAOC,SAASC,QAArB,OAA8BF,OAAOC,SAASE,SAA9C,aAA2DL,GAC9DM,MAAO,mBAIX,OACE,6BACE,6CACA,2DACA,yBAAKC,UAAU,yBACb,4BAAQA,UAAU,YAAYC,QAAS,kBAAMT,EAAW,YAAxD,gBAGA,4BAAQQ,UAAU,UAAUC,QAAS,kBAAMT,EAAW,iBAAtD,kB,OCWOU,G,MAtCA,WACb,IAAMlB,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,gBACJC,SAAU,mBAJK,EAQqBe,mBAAS,GAR9B,mBAQZC,EARY,KAQEC,EARF,OASeF,mBAAS,IATxB,mBASZG,EATY,KASDC,EATC,KAUbC,EAAiBvB,mBAgBvB,OAdAI,oBAAU,WACRL,EAASM,QAAQC,aACjBiB,EAAelB,QAAUmB,YAAY,WACnCJ,EAAgB,SAAAK,GAAI,OAAIA,EAAO,KAC9B,MACF,IAEHrB,oBAAU,WACJe,GAAgB,IAClBG,EAAa,qCACbI,cAAcH,EAAelB,WAE9B,CAACc,IAGF,yBAAKJ,UAAU,aACb,6CACA,8HACA,yBAAKA,UAAU,gBACb,gDAAsBI,EAAtB,KACA,4BAAQQ,MAAO,CAAEC,MAAO,OAAQC,YAAa,GAAKf,MAAM,iBAAiBgB,IAAKT,Q,yBCoCvEJ,EApEA,WACb,IAAMlB,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,gBACJC,SAAU,mBAJK,EAQMe,mBAAS,gBAAiBa,WAA5CC,EARY,sBASMd,qBAAWa,UAAUE,cAAvCC,EATY,sBAUqBhB,qBAVrB,mBAUZiB,EAVY,KAUEC,EAVF,OAWWlB,oBAAS,GAXpB,mBAWZmB,EAXY,KAWHC,EAXG,KAanBlC,oBAAU,WACRL,EAASM,QAAQC,cAChB,IAEH,IAiBMiC,EAAa,sCAAG,4BAAAC,EAAA,8EAEGT,UAAUE,aAAaQ,aAAa,CAAEC,OAAO,EAAMC,OAAO,IAF7D,OAEZC,EAFY,OAGlBC,QAAQC,IAAI,UAAWF,GACvBN,GAAW,GAJO,gDAMlBO,QAAQE,MAAR,MANkB,uDAAH,qDAUnB,OACE,yBAAKhC,UAAU,aACb,qDACA,+IAGA,yBAAKA,UAAU,iBACb,wDAA8BiC,KAAKC,UAAUjB,IAC7C,6BAAMG,GACN,kDAAwBa,KAAKC,UAAUf,IACvC,6BAAMG,EAAU,YAAc,kBAEhC,yBAAKtB,UAAU,gBACb,4BAAQA,UAAU,YAAYC,QAxCZ,WACtB,GAAIgB,EAAgB,CAClBa,QAAQC,IAAI,yBACZ,IACEf,UAAUmB,YAAYC,mBAAmB,SAAAC,GACvCP,QAAQC,IAAI,qBAAsBM,GAClChB,EAAgBY,KAAKC,UAAUG,EAAU,KAAM,MAEjD,MAAOC,GACPR,QAAQC,IAAIO,GACZjB,EAAgB,sCAGlBA,EAAgB,kCA2Bd,gBAGA,4BAAQrB,UAAU,YAAYC,QAASuB,GAAvC,uBC/COe,EAVH,WACV,OACE,kBAAC,IAAD,CAAQC,SAAU7C,OAAOC,SAASE,UAChC,kBAAC,IAAD,CAAO2C,KAAK,IAAIC,OAAK,EAACC,UAAW5D,IACjC,kBAAC,IAAD,CAAO0D,KAAK,UAAUE,UAAWC,IACjC,kBAAC,IAAD,CAAOH,KAAK,iBAAiBE,UAAWE,MCP9CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.9e36dd4e.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\n\nconst Summary = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp.</p>\n      <div className=\"action-block vertical\">\n        <button className=\"secondary\" onClick={() => showDetail('iframe')}>\n          Inner iFrame\n        </button>\n        <button className=\"primary\" onClick={() => showDetail('geolocation')}>\n          Geolocation\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [currentCount, setCurrentCount] = useState(5)\n  const [iframeUrl, setIframeUrl] = useState('')\n  const countdownTimer = useRef()\n\n  useEffect(() => {\n    microapp.current.initialize()\n    countdownTimer.current = setInterval(() => {\n      setCurrentCount(prev => prev - 1)\n    }, 1000)\n  }, [])\n\n  useEffect(() => {\n    if (currentCount <= 0) {\n      setIframeUrl('https://www.catapultsgame.com/app')\n      clearInterval(countdownTimer.current)\n    }\n  }, [currentCount])\n\n  return (\n    <div className=\"container\">\n      <h1>IFrame Detail</h1>\n      <p>Tests an inner iFrame. This is a typical use case for \"wrapping\" an existing app in a MicroApp.</p>\n      <div className=\"exampleBlock\">\n        <p>Showing iFrame in {currentCount}s</p>\n        <iframe style={{ width: '100%', borderWidth: 1 }} title=\"Example Iframe\" src={iframeUrl} />\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [isGeoAvailable] = useState('geolocation' in navigator)\n  const [isMicAvailable] = useState(!!navigator.mediaDevices)\n  const [locationData, setLocationData] = useState()\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const getLocationData = () => {\n    if (isGeoAvailable) {\n      console.log('Getting location data')\n      try {\n        navigator.geolocation.getCurrentPosition(position => {\n          console.log('Got location data ', position)\n          setLocationData(JSON.stringify(position, null, 2))\n        })\n      } catch (err) {\n        console.log(err)\n        setLocationData('Error fetching location data')\n      }\n    } else {\n      setLocationData('Geolocation is not available')\n    }\n  }\n\n  const getMicrophone = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: false })\n      console.log('stream ', stream)\n      setIsMicOn(true)\n    } catch (err) {\n      console.error(err)\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Feature Policy Detail</h1>\n      <p>\n        This detail attempts to get location data. You must include the featurePolicy in the catalog entry for this app.\n      </p>\n      <div className=\"example-block\">\n        <p>GeoLocation is available: {JSON.stringify(isGeoAvailable)}</p>\n        <pre>{locationData}</pre>\n        <p>Media is available: {JSON.stringify(isMicAvailable)}</p>\n        <pre>{isMicOn ? 'recording' : 'not recording'}</pre>\n      </div>\n      <div className=\"action-block\">\n        <button className=\"secondary\" onClick={getLocationData}>\n          Get Location\n        </button>\n        <button className=\"secondary\" onClick={getMicrophone}>\n          Start Microphone\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React, { useEffect } from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport IFrameDetail from './pages/IFrameDetail'\nimport FeaturePolicyDetail from './pages/FeaturePolicyDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/iframe\" component={IFrameDetail} />\n      <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}