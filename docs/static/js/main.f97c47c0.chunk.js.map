{"version":3,"sources":["components/Debugger.js","pages/Summary.js","pages/FeaturePolicyDetail.js","App.js","index.js"],"names":["className","onClick","window","location","reload","Summary","microapp","useRef","MicroApp","id","audience","useEffect","current","initialize","version","type","placeholder","Debugger","detailPage","showDetail","url","origin","pathname","title","Detail","useState","navigator","isGeoAvailable","mediaDevices","isMicAvailable","locationData","setLocationData","isMicOn","setIsMicOn","JSON","stringify","tabIndex","geolocation","getCurrentPosition","position","coords","latitude","longitude","err","role","aria-label","prev","App","basename","path","exact","component","FeaturePolicyDetail","ReactDOM","render","document","getElementById"],"mappings":"qoDAEe,aACb,OACE,oCACE,4BAAQA,UAAU,YAAYC,QAAS,kBAAMC,OAAOC,SAASC,QAAO,KAApE,a,kBCuCSC,EArCC,WACd,IAAMC,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,sBACJC,SAAU,mBAIdC,qBAAU,WACRL,EAASM,QAAQC,eAChB,IAUH,OACE,6BACE,6CACA,2DAAiCC,KACjC,6BAASd,UAAU,WACjB,2BAAOe,KAAK,OAAOC,YAAY,gBAEjC,yBAAKhB,UAAU,yBACb,kBAACiB,EAAD,MACA,4BAAQjB,UAAU,UAAUC,QAAS,kBAjBxBiB,EAiByC,qBAf1DZ,EAASM,QAAQO,WAAW,CAC1BC,IAAI,GAAD,OAAKlB,OAAOC,SAASkB,QAArB,OAA8BnB,OAAOC,SAASmB,SAA9C,aAA2DJ,GAC9DK,MAAO,kBAJQ,IAAAL,IAiBb,qB,QC+BOM,G,OA/DA,WACb,IAAMlB,EAAWC,iBACf,IAAIC,IAAS,CACXC,GAAI,gBACJC,SAAU,mBAJK,EAQMe,mBAAS,gBAAiBC,WAA5CC,EARY,sBASMF,qBAAWC,UAAUE,cAAvCC,EATY,sBAUqBJ,mBAAS,wBAV9B,mBAUZK,EAVY,KAUEC,EAVF,OAWWN,oBAAS,GAXpB,mBAWZO,EAXY,KAWHC,EAXG,KAanBtB,qBAAU,WACRL,EAASM,QAAQC,eAChB,IAiBH,OACE,yBAAKb,UAAU,aACb,qDACA,+IAGA,yBAAKA,UAAU,iBACb,wDAA8BkC,KAAKC,UAAUR,IAC7C,yBAAK3B,UAAU,iBACb,6BAAM8B,GACN,yBAAKM,SAAS,IAAIpC,UAAU,eAAeC,QAzB3B,WACtB,GAAI0B,EAAgB,CAClBI,EAAgB,yBAChB,IACEL,UAAUW,YAAYC,oBAAmB,SAAAC,GACvCR,EAAgB,QAAD,OAASQ,EAASC,OAAOC,SAAzB,kBAA2CF,EAASC,OAAOE,eAE5E,MAAOC,GACPZ,EAAgB,sCAGlBA,EAAgB,kCAeV,0BAAMa,KAAK,MAAMC,aAAW,YAA5B,kBAKJ,kDAAwBX,KAAKC,UAAUN,IACvC,yBAAK7B,UAAU,iBACZ6B,GACC,yBAAKO,SAAS,IAAIpC,UAAU,eAAeC,QAAS,kBAAMgC,GAAW,SAAAa,GAAI,OAAKA,OAC5E,0BAAMF,KAAK,MAAMC,aAAW,MAAM7C,UAAWgC,EAAU,KAAO,OAA9D,4BCzCCe,EATH,WACV,OACE,kBAAC,IAAD,CAAQC,SAAU9C,OAAOC,SAASmB,UAChC,kBAAC,IAAD,CAAO2B,KAAK,IAAIC,OAAK,EAACC,UAAW9C,IACjC,kBAAC,IAAD,CAAO4C,KAAK,iBAAiBE,UAAWC,MCH9CC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f97c47c0.chunk.js","sourcesContent":["import React from 'react'\n\nexport default () => {\n  return (\n    <>\n      <button className=\"secondary\" onClick={() => window.location.reload(true)}>\n        Refresh\n      </button>\n    </>\n  )\n}\n","import React, { useRef, useEffect } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport Debugger from '../components/Debugger'\nimport './summary.css'\n\nimport { version } from '../../package.json'\n\nconst Summary = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp-local',\n      audience: 'edge-microapp'\n    })\n  )\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const showDetail = detailPage => {\n    // We have to use the hash router to show detail due to Github pages limitations\n    microapp.current.showDetail({\n      url: `${window.location.origin}${window.location.pathname}#/${detailPage}`,\n      title: 'Edge Microapp'\n    })\n  }\n\n  return (\n    <div>\n      <h1>Edge Microapp</h1>\n      <p>This is the \"edgy\" microapp v{version}</p>\n      <section className=\"section\">\n        <input type=\"text\" placeholder=\"Input Test\"></input>\n      </section>\n      <div className=\"action-block vertical\">\n        <Debugger />\n        <button className=\"primary\" onClick={() => showDetail('featurepolicy')}>\n          Feature Policy\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default Summary\n","import React, { useRef, useEffect, useState } from 'react'\nimport MicroApp from '@workgrid/micro-app'\nimport './detail.css'\n\nconst Detail = () => {\n  const microapp = useRef(\n    new MicroApp({\n      id: 'edge-microapp',\n      audience: 'edge-microapp'\n    })\n  )\n\n  const [isGeoAvailable] = useState('geolocation' in navigator)\n  const [isMicAvailable] = useState(!!navigator.mediaDevices)\n  const [locationData, setLocationData] = useState('Get location data >>')\n  const [isMicOn, setIsMicOn] = useState(false)\n\n  useEffect(() => {\n    microapp.current.initialize()\n  }, [])\n\n  const getLocationData = () => {\n    if (isGeoAvailable) {\n      setLocationData('Getting location data')\n      try {\n        navigator.geolocation.getCurrentPosition(position => {\n          setLocationData(`lat: ${position.coords.latitude}, lon: ${position.coords.longitude}`)\n        })\n      } catch (err) {\n        setLocationData('Error fetching location data')\n      }\n    } else {\n      setLocationData('Geolocation is not available')\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h1>Feature Policy Detail</h1>\n      <p>\n        This detail attempts to get location data. You must include the featurePolicy in the catalog entry for this app.\n      </p>\n      <div className=\"example-block\">\n        <p>GeoLocation is available: {JSON.stringify(isGeoAvailable)}</p>\n        <div className=\"feature-block\">\n          <pre>{locationData}</pre>\n          <div tabIndex=\"0\" className=\"feature-icon\" onClick={getLocationData}>\n            <span role=\"img\" aria-label=\"position\">\n              üß≠\n            </span>\n          </div>\n        </div>\n        <p>Media is available: {JSON.stringify(isMicAvailable)}</p>\n        <div className=\"feature-block\">\n          {isMicAvailable && (\n            <div tabIndex=\"1\" className=\"feature-icon\" onClick={() => setIsMicOn(prev => !prev)}>\n              <span role=\"img\" aria-label=\"mic\" className={isMicOn ? 'on' : 'off'}>\n                üéôÔ∏è\n              </span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Detail\n","import React from 'react'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\nimport Summary from './pages/Summary'\nimport FeaturePolicyDetail from './pages/FeaturePolicyDetail'\n\nconst App = () => {\n  return (\n    <Router basename={window.location.pathname}>\n      <Route path=\"/\" exact component={Summary} />\n      <Route path=\"/featurepolicy\" component={FeaturePolicyDetail} />\n    </Router>\n  )\n}\n\nexport default App\n","import 'core-js/stable'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}